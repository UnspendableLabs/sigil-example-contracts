package kontor:contract;

world contract {
    include kontor:built-in/built-in;
    use kontor:built-in/context.{view-context, proc-context, signer};
    use kontor:built-in/error.{error};
    use kontor:built-in/numbers.{integer, decimal};
    use kontor:built-in/foreign.{contract-address};

    export init: func(ctx: borrow<proc-context>);

    export open: func(ctx: borrow<proc-context>, token: contract-address, n: integer, other-tenants: list<string>) -> result<string, error>;

    export deposit: func(ctx: borrow<proc-context>, token: contract-address, account-id: string, n: integer) -> result<_, error>;

    export withdraw: func(ctx: borrow<proc-context>, token: contract-address, account-id: string, n: integer) -> result<_, error>;

    export balance: func(ctx: borrow<view-context>, account-id: string) -> option<integer>;

    export tenants: func(ctx: borrow<view-context>, account-id: string) -> option<list<string>>;
}

